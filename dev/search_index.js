var documenterSearchIndex = {"docs":
[{"location":"background/silicon_empirical_pseudopotential/#Empirical-Pseudopotential-for-Silicon","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Author: William M. Medlar Source: https://gist.github.com/wmedlar/12c13ded690b476739ab","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The band structure of Silicon is calculated using the empirical pseudopotential method implemented in the Python programming language.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"A generalized routine is able to calculate the band structure of diamond and zincblende lattices. The energy splittings for Silicon at symmetry points appear to be very accurate with accepted values by diagonalizing a 343 x 343 Hamiltonian matrix.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#I.-Introduction","page":"Empirical Pseudopotential for Silicon","title":"I. Introduction","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The empirical pseudopotential method was developed as a tool to solve Schrodinger's equation of bulk crystals without the exact potential of an electron in a lattice â€“ a many body problem. Because of its simplicity and accuracy, the pseudopotential method still sees use today.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"A pseudopotential mimics the potential felt by valence and conduction band electrons, well beyond the nucleus. This potential can be Fourier expanded in plane waves, giving a large eigenvalue problem. Fourier coefficients can be fitted to calculations, as in Cohen and Bergstresser, or experimentally determined.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"In this paper I will form the pseudopotential Hamiltonian and implement it in the Python programming language to calculate the electronic band structure of Silicon. Calculated values are plotted and compared to accepted values, and the usefulness of the pseudopotential method is discussed.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#II.-Pseudopotential-Method","page":"Empirical Pseudopotential for Silicon","title":"II. Pseudopotential Method","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The pseudopotential Hamiltonian operator for an electron in a crystal takes the form:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"hatH = hatT + hatV = -frachbar^22m^* nabla^2 + V(vecr)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Where the potential V(vecr) is the crystal pseudopotential, and is given by a linear combination of atomic potentials. The potential is periodic and can be expanded into a Fourier series of plane waves and split into symmetric and antisymmetric parts:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"V(vecr) = sumlimits_vecG^infty V_vecG  e^-mathrmi  vecG cdot vecr\n= sumlimits_vecG^infty  left(V_G^S cosvecG cdot vectau + mathrmi V_G^A sinvecG cdot vectau right)  e^-mathrmi  vecG cdot vecr","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"where V_G^S and V_G^A are the symmetric and asymmetric form factors, respectively, unique to the pseudopotential. Following Brust's^2 method, form factors will only be nonzero for reciprocal lattice vectors vecG with magnitudes 0, 3, 4, 8, or 11.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The form factors can be interpreted by slight adjustment until the calculated band splittings match that of experimental data. Luckily these values are readily available for Silicon; I will take Cohen and Bergstresser's^1 to be accurate.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Meanwhile our kinetic component can be expressed as a summation over the reciprocal lattice vectors at any point veck in the first Brillouin zone:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"T = sumlimits_vecG^infty frachbar^22m^* veck + vecG^2","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Substituting these back into the Schrodinger equation and noting that the wavefunction is a Bloch function of the form:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Psi_veck(vecr) = e^mathrmi  veck cdot vecr  u_k (vecr)\n= e^mathrmi  veck cdot vecr sumlimits_vecG^infty  U(vecG)  e^mathrmi  vecG cdot vecr","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"we're left with the matrix equation:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"sumlimits_vecG^infty left left( frachbar^22m^* veck + vecG^2 - E  right) U(vecG)\n+ sumlimits_vecG^infty  U(vecG)  left(V_G^S cosleft( vecG - vecG right) cdot vectau + mathrmi V_G^A sinleft( vecG - vecG right) cdot vectau right) right = 0","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The energy eigenvalues of which can be found by diagonalizing our Hamiltonian.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#III.-Implementation","page":"Empirical Pseudopotential for Silicon","title":"III. Implementation","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Our Hamiltonian matrix's size is given by the number of reciprocal lattice vectors ( vecG  and vecG ) that we use, where each vector takes the form:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"vecG = h  vecb_1 + k  vecb_2 + l  vecb_3","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Where vecb_n are is our reciprocal lattice basis and h, k, and l are a set of integers centered around zero. For states=5 they are given by the set {-2, -1, 0, 1, 2}. The calculation of h, k, and l is incremented about the center of the matrix a la the Cartesian product, and was translated from Danner's^3 Mathematica notebook into Python.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Note that the coefficients can be, and often are, outside of their defined set, however any attempt to reimplement the calculations to their defined values was met with very strange band structures. Ultimately I conceded defeat and simply used his implementation.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"def coefficients(m, states):\n    \n    n = (states**3) // 2\n    s = m + n\n    floor = states // 2\n\n    h = s // states**2 - floor\n    k = s % states**2 // states - floor\n    l = s % states - floor\n\n    return h, k, l","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"coefficients(4, 5)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"(0, 1, -1)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The kinetic term of the Hamiltonian does not depend on vecG, only on vecG. Translating this to matrix notation, our kinetic term is nonzero only along the diagonal:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"T_ij = frachbar^22m^* veck + vecG_i^2 delta_ij","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"where i and j are our row and column indices, respectively, and delta_ij is the Kronecker delta. For veck and vecG_i values in units of frac2 pia the kinetic term is given by:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"from scipy import constants as c\n\n# remove constant from function definition so it is not recalculated every time\nKINETIC_CONSTANT = c.hbar**2 / (2 * c.m_e * c.e)\n\ndef kinetic(k, g):\n    \n    v = k + g\n    \n    return KINETIC_CONSTANT * v @ v","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"With two atoms in the unit cell of the diamond (or zincblende) lattice our potential component must include both of their contributions. As per Cohen and Bergstresser^1 I will use an origin halfway between the two atoms, with one situated at vecr_1 = fraca8 left(beginarrayccc1  1  1endarrayright) = vectau and the other at vecr_2 = - vectau. The potential component is then given by:","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"V_ij = V_G^S cosvecG cdot vectau + mathrmi V_G^A sinvecG cdot vectau","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The unit cell of Silicon is composed only of Silicon atoms, however, and thus has no asymmetric term. I've left it commented out in the function to avoid unnecessary calculations of 0, however it can easily be uncommented to work for zincblende configurations.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"import numpy as np\n\ndef potential(g, tau, sym, asym=0):\n    \n    return sym * np.cos(2 * np.pi * g @ tau) # + 1j * asym * np.sin(2 * np.pi * g @ tau)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The total Hamiltonian size will be given by states^3 times states^3 where states is the odd number of integer states our h, k, and l coefficients can take. The coefficients function has been reimplemented in the hamiltonian function with a cache to improve the performance of our calculation.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"import functools\nimport itertools\n\ndef hamiltonian(lattice_constant, form_factors, reciprocal_basis, k, states):\n    \n    # descriptive names are good for reading function signatures\n    # but a bit of a pain for writing\n    a = lattice_constant\n    ff = form_factors\n    basis = reciprocal_basis\n    \n    # some constants that don't need to be recalculated\n    kinetic_c = (2 * np.pi / a)**2\n    offset = 1 / 8 * np.ones(3)\n    \n    # states determines size of matrix\n    # each of the three reciprocal lattice vectors can\n    # take on this many states, centered around zero\n    # resulting in an n**3 x n**3 matrix\n    \n    n = states**3\n    \n    # internal cached implementation\n    @functools.lru_cache(maxsize=n)\n    def coefficients(m):\n        n = (states**3) // 2\n        s = m + n\n        floor = states // 2\n\n        h = s // states**2 - floor\n        k = s % states**2 // states - floor\n        l = s % states - floor\n\n        return h, k, l\n    \n    # initialize our matrix to arbitrary elements\n    # from whatever's currently in the memory location\n    # these will be filled up anyway and it's faster than initializing to a value\n    h = np.empty(shape=(n, n))\n    \n    # cartesian product over rows, cols; think an odometer\n    for row, col in itertools.product(range(n), repeat=2):\n        \n        if row == col:\n            g = coefficients(row - n // 2) @ basis\n            h[row][col] = kinetic_c * kinetic(k, g)\n            \n        else:\n            g = coefficients(row - col) @ basis\n            factors = ff.get(g @ g)\n            # potential is 0 for g**2 != (3, 8, 11)\n            h[row][col] = potential(g, offset, *factors) if factors else 0\n    \n    return h","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"And finally a function that will calculate the first eight eigenvalues of our Hamiltonian for each point along our k-path. The actual eigenvalues are calculated by the NumPy library using routines from the open-source Fortran 90 linear algebra package LAPACK.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"def band_structure(lattice_constant, form_factors, reciprocal_basis, states, path):\n    \n    bands = []\n    \n    # vstack concatenates our list of paths into one nice array\n    for k in np.vstack(path):\n        h = hamiltonian(lattice_constant, form_factors, reciprocal_basis, k, states)\n        eigvals = np.linalg.eigvals(h)\n        eigvals.sort()\n        # picks out the lowest eight eigenvalues\n        bands.append(eigvals[:8])\n    \n    \n    return np.stack(bands, axis=-1)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"linpath is a function taken from an earlier project of mine, and will be useful in creating a path of n k-points across the first Brillouin zone.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"def linpath(a, b, n=50, endpoint=True):\n    '''\n    Creates an array of n equally spaced points along the path a -> b, inclusive.\n\n    args:\n        a: An iterable of numbers that represents the starting position.\n        b: An iterable of numbers that represents the ending position.\n        n: The integer number of sample points to calculate. Defaults to 50.\n        \n    returns:\n        A numpy array of shape (n, k) where k is the shortest length of either\n        iterable -- a or b.\n    '''\n    # list of n linear spacings between the start and end of each corresponding point\n    spacings = [np.linspace(start, end, num=n, endpoint=endpoint) for start, end in zip(a, b)]\n    \n    # stacks along their last axis, transforming a list of spacings into an array of points of len n\n    return np.stack(spacings, axis=-1)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Here we set up our lattice parameters and sample points between each symmetry point. With n=100 we will create and diagonalize 325 Hamiltonians, 100 each along the Lambda, Delta, and Sigma paths, and 25 along the path from X to U/K. I don't suggest attempting to use much more than 100 points, as this is more than enough to look nice on a large graph and will significantly increase the calculation.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"# lattice constant in meters\nA = 5.43e-10\n\nrytoev = lambda *i: np.array(i) * 13.6059\n\n# symmetric form factors are commonly given in Rydbergs\n# however we've implemented our functions to use eV\nFORM_FACTORS = {\n    3.0: rytoev(-0.21),\n    8.0: rytoev(0.04),\n   11.0: rytoev(0.08)\n}\n\n# in units of 2 pi / a\nRECIPROCAL_BASIS = np.array([\n        [-1, 1, 1],\n        [1, -1, 1],\n        [1, 1, -1]\n])\n\n# sample points per k-path\nn = 100\n\n# symmetry points in the Brillouin zone\nG = np.array([0, 0, 0])\nL = np.array([1/2, 1/2, 1/2])\nK = np.array([3/4, 3/4, 0])\nX = np.array([0, 0, 1])\nW = np.array([1, 1/2, 0])\nU = np.array([1/4, 1/4, 1])\n\n# k-paths\nlambd = linpath(L, G, n, endpoint=False)\ndelta = linpath(G, X, n, endpoint=False)\nx_uk = linpath(X, U, int(n / 4), endpoint=False)\nsigma = linpath(K, G, n, endpoint=True)","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Below we run the actual calculation of the band structure, making use of the high symmetry of the diamond lattice with a path L rightarrow Gamma rightarrow X rightarrow UK rightarrow Gamma. Diagonalizing 325 7-state (343 x 343) Hamiltonians took about two minutes on my machine. Uncomment the %%timeit line to see how yours compares.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"# %%timeit -n 1 -r 1\nbands = band_structure(A, FORM_FACTORS, RECIPROCAL_BASIS, states=7, path=[lambd, delta, x_uk, sigma])","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Below we manipulate and plot the data into a lovely graph.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"from matplotlib import pyplot as plt\n\n%matplotlib inline\n\n# offset the bands so that the top of the valence bands is at zero\nbands -= max(bands[3])\n\nplt.figure(figsize=(15, 9))\n\nax = plt.subplot(111)\n\n# remove plot borders\nax.spines['top'].set_visible(False)\nax.spines['bottom'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_visible(False)\n\n# limit plot area to data\nplt.xlim(0, len(bands))\nplt.ylim(min(bands[0]) - 1, max(bands[7]) + 1)\n\n# custom tick names for k-points\nxticks = n * np.array([0, 0.5, 1, 1.5, 2, 2.25, 2.75, 3.25])\nplt.xticks(xticks, ('$L$', '$\\Lambda$', '$\\Gamma$', '$\\Delta$', '$X$', '$U,K$', '$\\Sigma$', '$\\Gamma$'), fontsize=18)\nplt.yticks(fontsize=18)\n\n# horizontal guide lines every 2.5 eV\nfor y in np.arange(-25, 25, 2.5):\n    plt.axhline(y, ls='--', lw=0.3, color='black', alpha=0.3)\n\n# hide ticks, unnecessary with gridlines\nplt.tick_params(axis='both', which='both',\n                top='off', bottom='off', left='off', right='off',\n                labelbottom='on', labelleft='on', pad=5)\n\nplt.xlabel('k-Path', fontsize=20)\nplt.ylabel('E(k) (eV)', fontsize=20)\n\nplt.text(135, -18, 'Fig. 1. Band structure of Si.', fontsize=12)\n\n# tableau 10 in fractional (r, g, b)\ncolors = 1 / 255 * np.array([\n    [31, 119, 180],\n    [255, 127, 14],\n    [44, 160, 44],\n    [214, 39, 40],\n    [148, 103, 189],\n    [140, 86, 75],\n    [227, 119, 194],\n    [127, 127, 127],\n    [188, 189, 34],\n    [23, 190, 207]\n])\n\nfor band, color in zip(bands, colors):\n    plt.plot(band, lw=2.0, color=color)\n\nplt.show()","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"(Image: png) ","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#IV.-Results","page":"Empirical Pseudopotential for Silicon","title":"IV. Results","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The calculated band structure is given in Fig. 1.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Convergence to within 0.1 eV for each energy splitting was acheived with seven states (within 0.15 eV with five). Subsequent odd-numbered states improved the convergence by additional orders of magnitude. All of my calculated values, save for the Gamma_25-X_1 splitting, were found to be within 5% of those calculated by Cohen and Bergstresser^1. Calculated band splittings are given in Fig. 2.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":" Gamma_25-Gamma_2 Gamma_25-Gamma_15 Gamma_25-L_1 Gamma_25-X_1 L_3-L_1 L_3-L_3 X_4-X_1\nCalculated 3.89 3.42 1.88 0.95 3.13 5.23 3.95\nCohen and Bergstresser^1 3.8 3.4 1.9 0.8 3.1 5.2 4.0","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"scriptsize textFig 2 Energy splittings in eV between high-symmetry points of Silicon","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"At lower values of states, there appears to be a discontinuity at the U/K symmetry point, marked by a slight but clear shift in all eight bands at the point. With a large number of sample points along each path this may become less apparent at lower state values. The blip seems to have all but disappeared when plotted at the converging parameters.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Silicon has an indirect band gap, with a valence band peak at the Gamma point and a conduction band minimum in the direction of the X point. The band gap was found to be 0.82 eV, a far cry from its accepted value of 1.11 eV. This discrepancy is likely made up in more advanced pseudopotential methods that account for the effects of spin-orbit coupling.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#V.-Conclusion","page":"Empirical Pseudopotential for Silicon","title":"V. Conclusion","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"The pseudopotential method is surprisingly accurate for the minimal computation required. The empirical approach grounds the calculations in reality, and the values derived very neatly match those from experimentation. This method has no upper limit, either â€“ the series expansions of the Hamiltonian extend to an infinite number of plane waves. As computational power increases, so too can the accuracy of pseudopotential calculations.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"Hardware is not the only useful tool; access to high-performance code is a necessity. As the availability of high-level wrappers to Fortran and C libraries increases, and numerous advancements are made in the field of computer science, your average computational physicist will experience a golden age of choices in which languages and tools they will use.","category":"page"},{"location":"background/silicon_empirical_pseudopotential/#VI.-References","page":"Empirical Pseudopotential for Silicon","title":"VI. References","text":"","category":"section"},{"location":"background/silicon_empirical_pseudopotential/","page":"Empirical Pseudopotential for Silicon","title":"Empirical Pseudopotential for Silicon","text":"M.L. Cohen and T.K. Bergstresser, \"Band Structures and Pseudopotential Form Factors for Fourteen Semiconductors of the Diamond and Zinc-blende Structures,\" Phys. Rev. 141, 789 (1966)\nD. Brust, \"Electronic Spectra of Crystalline Germanium and Silicon,\" Phys. Rev. 134, A1337 (1964)\nA. Danner, \"An introduction to the empirical pseudopotential method,\" https://www.ece.nus.edu.sg/stfpage/eleadj/pseudopotential.htm, downloaded November, 2015","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = QuantumMaterials","category":"page"},{"location":"#QuantumMaterials","page":"Home","title":"QuantumMaterials","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for QuantumMaterials.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [QuantumMaterials]","category":"page"}]
}
